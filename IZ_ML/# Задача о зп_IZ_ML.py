
'''
Таблица ROSSTAT_SALARY_RU, содержит сведения о средней заработной плате в РФ 
по регионам на 1 января 2019 года по данным Росстата. Представим ситуацию, что из-за невнимательности
 операциониста, регионы: Томская область, Самарская область оказались не представлены в итоговой сводке.
Роль невнимательного операциониста придется исполнить Вам (т.е. нужно удалить соответствующие строки), 
а далее работать уже с новой выборкой.
Вы можете вычислять статистические функции (например, AVG — выборочное среднее, 
COUNT — количество строк, VARIANCE — выборочная дисперсия, MEDIAN — выборочная медиана) прямо в СУБД. 
Если Вам удобнее выгружать данные в другой инструмент, например, в электронные таблицы, 
то при проблемах с кодировкой удобнее выполнять копирование результата запроса через буфер обмена. 
Обратите внимание на параметр ROWS — количество строк, которые по умолчанию выводятся в результате запроса. 
Однако рекомендуем получив выборку воспользоваться Azure ML Stuido или Python для определения статистик и 
знакомства с инструментами.
Задачи: 
1 Постройте вариационный ряд (сортировка по неубыванию, нумерация элементов начинается с 1. 21,37,41 (вывести)
2 Найдите выборочное среднее:
Ответ округлите до сотых.
3 Определите выборочную медиану:


'''

import pandas as pd
from matplotlib import pyplot as plt
import numpy as np
df = pd.read_excel('/Users/ekaterina/data4repos/ZP_ML.xlsx', header=0)
print(df)
print(df.info())
# По условиям задачи нам необхоимо избавиться от 2 регионов
# для этого сначала удостоверимся-есть ли они там

mask = df[(df['REGION_NAME'] == 'Томская область') | (df['REGION_NAME'] == 'Самарская область')]
print(" Томская и Самарская области", mask)

df_new = df[(df['REGION_NAME'] != 'Томская область') & (df['REGION_NAME'] != 'Самарская область')]
print("Без Томсклй и Самарской области", df_new)

# Отсортируем данные по объему зп
df_new_sort = df_new.sort_values(by=['SALARY'])
print(df_new_sort)

df_new_sort = df_new_sort.reset_index()  #  Сбросим индекс
print("Отсортированная по объему ЗП таблица",df_new_sort)

#  У нас индекс начинается с 0, нам надо с 1, для этого повысим индекс
df_new_sort.index += 1
print("Отсортированная по объему ЗП таблица c индексацией с 1",df_new_sort.head(20))


# Выводим требуемые элементы вариационного ряда
print("21, 37,41 элементы", df_new_sort.loc[[21, 37, 41]])

# Выводим требуемые элементы вариационного ряда последующие
print("22, 38,42 элементы", df_new_sort.loc[[22, 38, 42]])

# Выборочное среднее
mean = df_new_sort['SALARY'].mean()

print("Выборочное среднее", mean)

print("выборочная медиана 0,5", np.quantile(df_new_sort['SALARY'], 0.5))

'''
print("Строим гистограмму", plt.hist(df_new[1], bins=10))
#plt.show()

print("Среднее", np.mean(df_new[1]))

print("Дисперсия смещенная", np.var(df_new[1]))
print("Дисперсия несмещенная", np.var(df_new[1], ddof=1))


print("квантиль середина 0,5", np.quantile(df_new[1], 0.5))
print("квантиль 0,25", np.quantile(df_new[1], 0.25))

print("квантиль 0,75", np.quantile(df_new[1], 0.75))
'''



